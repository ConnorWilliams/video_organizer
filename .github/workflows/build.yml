name: Build and Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install

      # GUI tests can't run in CI environment - skipping
      # - name: Run tests
      #   run: pipenv run python test_gui.py

      - name: Build macOS app
        run: |
          pipenv run pyinstaller video_organizer.spec

      - name: Create macOS packages
        run: |
          mkdir -p release
          cd dist
          zip -r "../release/Skydiving_Video_Organizer_${{ github.ref_name }}_macOS.zip" "Skydiving Video Organizer.app"
          cd ..

          # Create DMG
          hdiutil create -volname "Skydiving Video Organizer ${{ github.ref_name }}" -srcfolder "dist/Skydiving Video Organizer.app" -ov -format UDZO "release/Skydiving_Video_Organizer_${{ github.ref_name }}_macOS.dmg"

      - name: Upload macOS artifacts
        uses: actions/upload-artifact@v3
        with:
          name: macOS-build
          path: release/*macOS*

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install

      # GUI tests can't run in CI environment - skipping
      # - name: Run tests
      #   run: pipenv run python test_gui.py

      - name: Build Windows app
        run: |
          pipenv run pyinstaller video_organizer_windows.spec

      - name: Create Windows packages
        run: |
          mkdir -p release
          cd dist
          Compress-Archive -Path "Skydiving Video Organizer.exe" -DestinationPath "../release/Skydiving_Video_Organizer_${{ github.ref_name }}_Windows.zip"
          cd ..

      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Windows-build
          path: release/*Windows*

  build-source:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Create source package
        run: |
          mkdir -p release
          zip -r "release/Skydiving_Video_Organizer_${{ github.ref_name }}_source.zip" \
            video_organizer_gui.py \
            organize_videos.py \
            test_gui.py \
            build_app.sh \
            build_windows.sh \
            video_organizer.spec \
            video_organizer_windows.spec \
            Pipfile \
            Pipfile.lock \
            README.md \
            CHANGELOG.md \
            LICENSE \
            .github/workflows/build.yml

      - name: Upload source artifacts
        uses: actions/upload-artifact@v3
        with:
          name: source-package
          path: release/*source*

  create-release:
    needs: [build-macos, build-windows, build-source]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/macOS-build/*
            artifacts/Windows-build/*
            artifacts/source-package/*
          body_path: CHANGELOG.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
